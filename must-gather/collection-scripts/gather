#!/bin/bash
BASE_COLLECTION_PATH="must-gather"
mkdir -p ${BASE_COLLECTION_PATH}

# Command line argument
SINCE_TIME=$1

# timestamp for starting of the script
START_TIME=$(date +%r)
start=$(date +%s)
printf "collection started at: %s \n" "${START_TIME}" >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1

# Call pre-install.sh
pre-install.sh

# Call other gather scripts
gather_namespaced_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
gather_clusterscoped_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
gather_noobaa_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"

if [ "$(oc get storagecluster -n openshift-storage -o go-template='{{range .items}}{{.spec.externalStorage.enable}}{{"\n"}}{{end}}')" == true ]; then
    echo "Skipping the ceph collection as External Storage is enabled"
elif [ -z "$(oc get storagecluster -n openshift-storage -o go-template='{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')" ]; then
    echo "Skipping ceph collection as Storage Cluster is not present"
else
    gather_ceph_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
fi

# Call post-uninstall.sh
post-uninstall.sh

# timestamp for ending of the script
END_TIME=$(date +%r)
end=$(date +%s)
# shellcheck disable=SC2004
totalTime=$(($end-$start))
# shellcheck disable=SC2129
printf "total time taken by collection was %s seconds \n" ${totalTime} >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1
printf "collection ended at: %s \n" "${END_TIME}" >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1
echo "deleting empty files" >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1
find "${BASE_COLLECTION_PATH}" -empty -delete >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1
exit 0
